<?php
declare(strict_types = 1);
namespace Slothsoft\Savegame\Node;

use Slothsoft\Savegame\EditorElement;

class BitFieldInstruction extends AbstractInstructionContent
{

    private $size;

    private $firstBit;

    private $lastBit;

    protected function getInstructionType(): string
    {
        return 'bit-field';
    }

    protected function loadStruc(EditorElement $strucElement)
    {
        parent::loadStruc($strucElement);
        
        $this->size = (int) $strucElement->getAttribute('size', 1, $this->ownerFile);
        $this->firstBit = (int) $strucElement->getAttribute('first-bit', 0);
        $this->lastBit = (int) $strucElement->getAttribute('last-bit', $this->size * 8 - 1);
    }

    protected function loadInstruction(EditorElement $strucElement)
    {
        $instructionList = [];
        
        $max = $this->size - 1;
        for ($i = $this->firstBit; $i <= $this->lastBit; $i ++) {
            $offset = (int) ($i / 8);
            $pos = $max - $offset;
            $bit = $i - 8 * $offset;
            
            $strucData = [];
            $strucData['position'] = $pos;
            $strucData['bit'] = $bit;
            $strucData['size'] = 1;
            // $strucData['name'] = $this->dictionary ? (string) $this->dictionary->getOption($i) : '';
            
            $instructionList[] = new EditorElement(EditorElement::NODE_TYPES['bit'], $strucData, $strucElement->getChildren());
        }
        
        return $instructionList;
    }
}
